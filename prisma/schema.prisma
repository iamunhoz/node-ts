// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  student
  teacher
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  sentences Sentence[]
  role      UserRole @default(student)
  Group     Group[]
}

model Group {
  id      Int    @id @default(autoincrement())
  name    String
  members User[] // Groups can have multiple students
}


model Sentence {
  id      String   @id
  user    User     @relation(fields: [userId], references: [id])
  userId  String
  phrases Phrase[]
}

model Phrase {
  id             String     @id
  // isso não vai pro db. isso é usado para gerar ts types.
  // fields deve referencia uma id desse model, e references deve referencia uma id externa (foreign)
  sentence       Sentence   @relation(fields: [sentenceId], references: [id])
  // isso sim é usado para gerar a foreign key constraint
  sentenceId     String
  body           String
  phraseType     PhraseType
  parentId       String
  // head String?
  // leftChildPhraseId String?
  // rightChildPhraseId String?
  // extraInfo Json?
}

enum PhraseType {
  Sentence
  NounP
  VerbP
  AdjectiveP
  PrepositionP
  DeterminerP
  AdverbP
  undefined
}


// prisma.$transaction(transactions: transactionPromise[]) :
//   essa fn garante que todas as transactions sejam realizadas. Caso uma falhe,
//   todas as demais transactions são revertidas